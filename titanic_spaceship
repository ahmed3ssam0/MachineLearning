{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":34377,"databundleVersionId":3220602,"sourceType":"competition"}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/titanic-spaceship-8bf82de6-a553-44bf-966b-76bb3db4ddb0.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20241226/auto/storage/goog4_request&X-Goog-Date=20241226T201153Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=2daa67445ca10a065553e84dc10459d9ce186c63b1481830dc8ec3ceee5252be69fecdf511b45bfddf1622410a689834fe88e71b2be32d32397b2d90f18b9902d77ef822847b41a29b8c6f1d4d622af8a7a02c3c538bb979f060b9dc12694362fbb6432027c64e904d28797a57e69d527ecb879f7e3128fd43349375eb7a84287b1821e6f3cfdcc14828dd258c6363bbdd334600406861ad61e314abc9078466a5f8453c1b12132c9b799d3bd6286fb82696077f8c8b22610fa71c2a9c46d48c34c61ca8682be0395874ae793f18058e55748168ec997de0a5af1370e94723cf17a138c458bc13dedd6157eab549cc05339e0688e7f20a39c59d62e3f970808b","timestamp":1735243927893}]}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/ahmedessamshadeed/titanic-spaceship?scriptVersionId=214929094\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# FUNCTIONS\ndef check_missing(df, drop_list):\n  for col in df.columns:\n    if df[col].isnull().sum() > 0 :\n      if df[col].isnull().sum() > 0.5 * len(df):\n        drop_list.append(col)\n      print(f\"{col} - {df[col].isnull().sum()} - {df[col].dtype}\")\n\n\ndef ML_models(models, models_names):\n  x = df.drop('Transported', axis=1)\n  y = df['Transported']\n  x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)\n  train_score = []\n  test_score = []\n  # Train models:\n  for model in models:\n      model.fit(x_train, y_train)\n      y_pred1 = model.predict(x_train)\n      y_pred2 = model.predict(x_test)\n      train_score.append(accuracy_score(y_train, y_pred1))\n      test_score.append(accuracy_score(y_test, y_pred2))\n\n  # Difference between training and testing ratio\n  ratio = []\n  for train, test in zip(train_score, test_score):\n      result = train - test\n      ratio.append(f'{result * 100:.2f}%')\n\n  # Measure model state:6\n  rate = []\n  for train, test in zip(train_score, test_score):\n      if train <= 0.65 and test <= 0.65:\n          rate.append('bad')\n      elif train > test * 1.10:\n          rate.append('overfite')\n      elif train > 0.65 and train < 0.80 and test > 0.65 and test < 0.80:\n          rate.append('middle')\n      elif train >= 0.80 and test >= 0.80 and train < 1.00 and test < 1.00:\n          rate.append('good')\n      elif train >= 0.80 and test < 0.80:\n          rate.append('high train, low test')\n      else:\n          rate.append('unknown')\n\n\n  # Create DataFrame\n  model_score = pd.DataFrame({\n      'Model': models_names,\n      'Train score': [f'{round(score * 100, 2)}%' for score in train_score],\n      'Test score': [f'{round(score * 100, 2)}%' for score in test_score],\n      'Ratio difference': ratio,\n      'Evaluate model': rate\n  })\n  return model_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.232101Z","iopub.execute_input":"2024-12-26T23:22:43.232535Z","iopub.status.idle":"2024-12-26T23:22:43.24897Z","shell.execute_reply.started":"2024-12-26T23:22:43.232478Z","shell.execute_reply":"2024-12-26T23:22:43.247598Z"},"id":"t3hWjrz6mOEz","executionInfo":{"status":"ok","timestamp":1735250332623,"user_tz":-120,"elapsed":4,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[],"execution_count":191},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import LabelEncoder, MinMaxScaler\nfrom sklearn.model_selection import train_test_split, cross_val_score\n\nfrom sklearn.linear_model import LinearRegression, SGDRegressor, Lasso, Ridge, ElasticNet\nfrom sklearn.svm import SVR\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.ensemble import RandomForestRegressor, BaggingRegressor, ExtraTreesRegressor, AdaBoostRegressor\nfrom xgboost import XGBRegressor\nfrom lightgbm import LGBMRegressor\n\nfrom sklearn.metrics import accuracy_score\nimport warnings\nwarnings.filterwarnings('ignore')\nsns.set()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.25117Z","iopub.execute_input":"2024-12-26T23:22:43.251519Z","iopub.status.idle":"2024-12-26T23:22:43.270949Z","shell.execute_reply.started":"2024-12-26T23:22:43.251485Z","shell.execute_reply":"2024-12-26T23:22:43.269576Z"},"id":"G2EpC9j6mOE0","executionInfo":{"status":"ok","timestamp":1735250332623,"user_tz":-120,"elapsed":4,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[],"execution_count":192},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/spaceship-titanic/train.csv')\ndf_test = pd.read_csv('/kaggle/input/spaceship-titanic/test.csv')\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.272374Z","iopub.execute_input":"2024-12-26T23:22:43.27271Z","iopub.status.idle":"2024-12-26T23:22:43.364042Z","shell.execute_reply.started":"2024-12-26T23:22:43.272678Z","shell.execute_reply":"2024-12-26T23:22:43.3631Z"},"id":"akrwOqo6mOE0","outputId":"dfb27ca1-25bc-4cd5-db0c-138052d5f508","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1735250471404,"user_tz":-120,"elapsed":1030,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[{"execution_count":193,"output_type":"execute_result","data":{"text/plain":"     PassengerId HomePlanet CryoSleep     Cabin    Destination   Age    VIP  \\\n0        0001_01     Europa     False     B/0/P    TRAPPIST-1e  39.0  False   \n1        0002_01      Earth     False     F/0/S    TRAPPIST-1e  24.0  False   \n2        0003_01     Europa     False     A/0/S    TRAPPIST-1e  58.0   True   \n3        0003_02     Europa     False     A/0/S    TRAPPIST-1e  33.0  False   \n4        0004_01      Earth     False     F/1/S    TRAPPIST-1e  16.0  False   \n...          ...        ...       ...       ...            ...   ...    ...   \n8688     9276_01     Europa     False    A/98/P    55 Cancri e  41.0   True   \n8689     9278_01      Earth      True  G/1499/S  PSO J318.5-22  18.0  False   \n8690     9279_01      Earth     False  G/1500/S    TRAPPIST-1e  26.0  False   \n8691     9280_01     Europa     False   E/608/S    55 Cancri e  32.0  False   \n8692     9280_02     Europa     False   E/608/S    TRAPPIST-1e  44.0  False   \n\n      RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n0             0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n1           109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n2            43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n3             0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n4           303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n...           ...        ...           ...     ...     ...                ...   \n8688          0.0     6819.0           0.0  1643.0    74.0  Gravior Noxnuther   \n8689          0.0        0.0           0.0     0.0     0.0    Kurta Mondalley   \n8690          0.0        0.0        1872.0     1.0     0.0       Fayey Connon   \n8691          0.0     1049.0           0.0   353.0  3235.0   Celeon Hontichre   \n8692        126.0     4688.0           0.0     0.0    12.0   Propsh Hontichre   \n\n      Transported  \n0           False  \n1            True  \n2           False  \n3           False  \n4            True  \n...           ...  \n8688        False  \n8689        False  \n8690         True  \n8691        False  \n8692         True  \n\n[8693 rows x 14 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PassengerId</th>\n      <th>HomePlanet</th>\n      <th>CryoSleep</th>\n      <th>Cabin</th>\n      <th>Destination</th>\n      <th>Age</th>\n      <th>VIP</th>\n      <th>RoomService</th>\n      <th>FoodCourt</th>\n      <th>ShoppingMall</th>\n      <th>Spa</th>\n      <th>VRDeck</th>\n      <th>Name</th>\n      <th>Transported</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0001_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>B/0/P</td>\n      <td>TRAPPIST-1e</td>\n      <td>39.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Maham Ofracculy</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0002_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>F/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>24.0</td>\n      <td>False</td>\n      <td>109.0</td>\n      <td>9.0</td>\n      <td>25.0</td>\n      <td>549.0</td>\n      <td>44.0</td>\n      <td>Juanna Vines</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0003_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>58.0</td>\n      <td>True</td>\n      <td>43.0</td>\n      <td>3576.0</td>\n      <td>0.0</td>\n      <td>6715.0</td>\n      <td>49.0</td>\n      <td>Altark Susent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0003_02</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/0/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>33.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>1283.0</td>\n      <td>371.0</td>\n      <td>3329.0</td>\n      <td>193.0</td>\n      <td>Solam Susent</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0004_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>F/1/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>16.0</td>\n      <td>False</td>\n      <td>303.0</td>\n      <td>70.0</td>\n      <td>151.0</td>\n      <td>565.0</td>\n      <td>2.0</td>\n      <td>Willy Santantines</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8688</th>\n      <td>9276_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>A/98/P</td>\n      <td>55 Cancri e</td>\n      <td>41.0</td>\n      <td>True</td>\n      <td>0.0</td>\n      <td>6819.0</td>\n      <td>0.0</td>\n      <td>1643.0</td>\n      <td>74.0</td>\n      <td>Gravior Noxnuther</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8689</th>\n      <td>9278_01</td>\n      <td>Earth</td>\n      <td>True</td>\n      <td>G/1499/S</td>\n      <td>PSO J318.5-22</td>\n      <td>18.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>Kurta Mondalley</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8690</th>\n      <td>9279_01</td>\n      <td>Earth</td>\n      <td>False</td>\n      <td>G/1500/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>26.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1872.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>Fayey Connon</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <th>8691</th>\n      <td>9280_01</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>E/608/S</td>\n      <td>55 Cancri e</td>\n      <td>32.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>1049.0</td>\n      <td>0.0</td>\n      <td>353.0</td>\n      <td>3235.0</td>\n      <td>Celeon Hontichre</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>8692</th>\n      <td>9280_02</td>\n      <td>Europa</td>\n      <td>False</td>\n      <td>E/608/S</td>\n      <td>TRAPPIST-1e</td>\n      <td>44.0</td>\n      <td>False</td>\n      <td>126.0</td>\n      <td>4688.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>12.0</td>\n      <td>Propsh Hontichre</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n<p>8693 rows × 14 columns</p>\n</div>"},"metadata":{}}],"execution_count":193},{"cell_type":"code","source":"dropping = []\ncheck_missing(df, dropping)\nprint(f\"Features that can be droped: {dropping}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.366904Z","iopub.execute_input":"2024-12-26T23:22:43.367388Z","iopub.status.idle":"2024-12-26T23:22:43.388168Z","shell.execute_reply.started":"2024-12-26T23:22:43.36734Z","shell.execute_reply":"2024-12-26T23:22:43.386875Z"},"id":"KWSXTmlCmOE1","outputId":"b6b12ba0-4fab-4db4-90f3-2a71f4455221","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1735250333093,"user_tz":-120,"elapsed":17,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[{"name":"stdout","text":"HomePlanet - 201 - object\nCryoSleep - 217 - object\nCabin - 199 - object\nDestination - 182 - object\nAge - 179 - float64\nVIP - 203 - object\nRoomService - 181 - float64\nFoodCourt - 183 - float64\nShoppingMall - 208 - float64\nSpa - 183 - float64\nVRDeck - 188 - float64\nName - 200 - object\nFeatures that can be droped: []\n","output_type":"stream"}],"execution_count":194},{"cell_type":"code","source":"df.drop(columns=['PassengerId', 'Name', 'Cabin'], inplace=True)\ndf_test.drop(columns=['PassengerId', 'Name', 'Cabin'], inplace=True)\ndf_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.389594Z","iopub.execute_input":"2024-12-26T23:22:43.389907Z","iopub.status.idle":"2024-12-26T23:22:43.419982Z","shell.execute_reply.started":"2024-12-26T23:22:43.389878Z","shell.execute_reply":"2024-12-26T23:22:43.418909Z"},"id":"DzaA55dvmOE1","outputId":"adcae67c-49d8-4a49-b7d4-3daf8949a498","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1735250333094,"user_tz":-120,"elapsed":16,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[{"execution_count":195,"output_type":"execute_result","data":{"text/plain":"     HomePlanet CryoSleep    Destination   Age    VIP  RoomService  FoodCourt  \\\n0         Earth      True    TRAPPIST-1e  27.0  False          0.0        0.0   \n1         Earth     False    TRAPPIST-1e  19.0  False          0.0        9.0   \n2        Europa      True    55 Cancri e  31.0  False          0.0        0.0   \n3        Europa     False    TRAPPIST-1e  38.0  False          0.0     6652.0   \n4         Earth     False    TRAPPIST-1e  20.0  False         10.0        0.0   \n...         ...       ...            ...   ...    ...          ...        ...   \n4272      Earth      True    TRAPPIST-1e  34.0  False          0.0        0.0   \n4273      Earth     False    TRAPPIST-1e  42.0  False          0.0      847.0   \n4274       Mars      True    55 Cancri e   NaN  False          0.0        0.0   \n4275     Europa     False            NaN   NaN  False          0.0     2680.0   \n4276      Earth      True  PSO J318.5-22  43.0  False          0.0        0.0   \n\n      ShoppingMall     Spa  VRDeck  \n0              0.0     0.0     0.0  \n1              0.0  2823.0     0.0  \n2              0.0     0.0     0.0  \n3              0.0   181.0   585.0  \n4            635.0     0.0     0.0  \n...            ...     ...     ...  \n4272           0.0     0.0     0.0  \n4273          17.0    10.0   144.0  \n4274           0.0     0.0     0.0  \n4275           0.0     0.0   523.0  \n4276           0.0     0.0     0.0  \n\n[4277 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>HomePlanet</th>\n      <th>CryoSleep</th>\n      <th>Destination</th>\n      <th>Age</th>\n      <th>VIP</th>\n      <th>RoomService</th>\n      <th>FoodCourt</th>\n      <th>ShoppingMall</th>\n      <th>Spa</th>\n      <th>VRDeck</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Earth</td>\n      <td>True</td>\n      <td>TRAPPIST-1e</td>\n      <td>27.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Earth</td>\n      <td>False</td>\n      <td>TRAPPIST-1e</td>\n      <td>19.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>9.0</td>\n      <td>0.0</td>\n      <td>2823.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Europa</td>\n      <td>True</td>\n      <td>55 Cancri e</td>\n      <td>31.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Europa</td>\n      <td>False</td>\n      <td>TRAPPIST-1e</td>\n      <td>38.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>6652.0</td>\n      <td>0.0</td>\n      <td>181.0</td>\n      <td>585.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Earth</td>\n      <td>False</td>\n      <td>TRAPPIST-1e</td>\n      <td>20.0</td>\n      <td>False</td>\n      <td>10.0</td>\n      <td>0.0</td>\n      <td>635.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4272</th>\n      <td>Earth</td>\n      <td>True</td>\n      <td>TRAPPIST-1e</td>\n      <td>34.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4273</th>\n      <td>Earth</td>\n      <td>False</td>\n      <td>TRAPPIST-1e</td>\n      <td>42.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>847.0</td>\n      <td>17.0</td>\n      <td>10.0</td>\n      <td>144.0</td>\n    </tr>\n    <tr>\n      <th>4274</th>\n      <td>Mars</td>\n      <td>True</td>\n      <td>55 Cancri e</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4275</th>\n      <td>Europa</td>\n      <td>False</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>2680.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>523.0</td>\n    </tr>\n    <tr>\n      <th>4276</th>\n      <td>Earth</td>\n      <td>True</td>\n      <td>PSO J318.5-22</td>\n      <td>43.0</td>\n      <td>False</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4277 rows × 10 columns</p>\n</div>"},"metadata":{}}],"execution_count":195},{"cell_type":"code","source":"for col in df.columns:\n    distinct_values = df[col].unique()\n    print(col)\n    print(pd.Series(distinct_values))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.421371Z","iopub.execute_input":"2024-12-26T23:22:43.421686Z","iopub.status.idle":"2024-12-26T23:22:43.439907Z","shell.execute_reply.started":"2024-12-26T23:22:43.421655Z","shell.execute_reply":"2024-12-26T23:22:43.438669Z"},"id":"Daa56kb2mOE1","outputId":"75b87dda-f02e-438a-9eb1-a87873e727ac","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1735250333094,"user_tz":-120,"elapsed":15,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[{"name":"stdout","text":"HomePlanet\n0    Europa\n1     Earth\n2      Mars\n3       NaN\ndtype: object\nCryoSleep\n0    False\n1     True\n2      NaN\ndtype: object\nDestination\n0      TRAPPIST-1e\n1    PSO J318.5-22\n2      55 Cancri e\n3              NaN\ndtype: object\nAge\n0     39.0\n1     24.0\n2     58.0\n3     33.0\n4     16.0\n      ... \n76    73.0\n77    66.0\n78    69.0\n79    72.0\n80    77.0\nLength: 81, dtype: float64\nVIP\n0    False\n1     True\n2      NaN\ndtype: object\nRoomService\n0          0.0\n1        109.0\n2         43.0\n3        303.0\n4         42.0\n         ...  \n1269     459.0\n1270    1003.0\n1271    1569.0\n1272    8586.0\n1273     745.0\nLength: 1274, dtype: float64\nFoodCourt\n0          0.0\n1          9.0\n2       3576.0\n3       1283.0\n4         70.0\n         ...  \n1503    1015.0\n1504    1146.0\n1505    3208.0\n1506    6819.0\n1507    4688.0\nLength: 1508, dtype: float64\nShoppingMall\n0          0.0\n1         25.0\n2        371.0\n3        151.0\n4          3.0\n         ...  \n1111     918.0\n1112     205.0\n1113    1085.0\n1114     510.0\n1115    1872.0\nLength: 1116, dtype: float64\nSpa\n0          0.0\n1        549.0\n2       6715.0\n3       3329.0\n4        565.0\n         ...  \n1323     269.0\n1324    3238.0\n1325    2868.0\n1326    1107.0\n1327    1643.0\nLength: 1328, dtype: float64\nVRDeck\n0          0.0\n1         44.0\n2         49.0\n3        193.0\n4          2.0\n         ...  \n1302    5839.0\n1303    2252.0\n1304    1164.0\n1305     971.0\n1306    3235.0\nLength: 1307, dtype: float64\nTransported\n0    False\n1     True\ndtype: bool\n","output_type":"stream"}],"execution_count":196},{"cell_type":"code","source":"for col in df.columns:\n    if df[col].dtype == 'object':\n        df[col].fillna(df[col].mode()[0], inplace=True)\nfor col in df_test.columns:\n    if df_test[col].dtype == 'object':\n        df_test[col].fillna(df_test[col].mode()[0], inplace=True)\ncheck_missing(df_test, dropping)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.441364Z","iopub.execute_input":"2024-12-26T23:22:43.441682Z","iopub.status.idle":"2024-12-26T23:22:43.469867Z","shell.execute_reply.started":"2024-12-26T23:22:43.441652Z","shell.execute_reply":"2024-12-26T23:22:43.468717Z"},"id":"TV67f__PmOE2","outputId":"271ede7e-7c41-4863-a105-b4648b6495fb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1735250333094,"user_tz":-120,"elapsed":14,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[{"name":"stdout","text":"Age - 91 - float64\nRoomService - 82 - float64\nFoodCourt - 106 - float64\nShoppingMall - 98 - float64\nSpa - 101 - float64\nVRDeck - 80 - float64\n","output_type":"stream"}],"execution_count":197},{"cell_type":"code","source":"df.dropna(inplace=True)\ncheck_missing(df, dropping)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.474515Z","iopub.execute_input":"2024-12-26T23:22:43.47527Z","iopub.status.idle":"2024-12-26T23:22:43.486079Z","shell.execute_reply.started":"2024-12-26T23:22:43.475218Z","shell.execute_reply":"2024-12-26T23:22:43.48498Z"},"id":"DGlU5k8FmOE2","executionInfo":{"status":"ok","timestamp":1735250333094,"user_tz":-120,"elapsed":12,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}}},"outputs":[],"execution_count":198},{"cell_type":"code","source":"for col in df_test.columns:\n    if df_test[col].isnull().sum() > 0:\n       df_test[col].fillna(df_test[col].median(), inplace=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.488195Z","iopub.execute_input":"2024-12-26T23:22:43.488479Z","iopub.status.idle":"2024-12-26T23:22:43.502312Z","shell.execute_reply.started":"2024-12-26T23:22:43.488451Z","shell.execute_reply":"2024-12-26T23:22:43.501277Z"}},"outputs":[],"execution_count":199},{"cell_type":"code","source":"le = LabelEncoder()\nfor col in df.columns:\n    if df[col].dtype == 'object' or df[col].dtype == 'bool':\n        df[col] = le.fit_transform(df[col])\nfor col in df_test.columns:\n    if df_test[col].dtype == 'object' or df_test[col].dtype == 'bool':\n        df_test[col] = le.fit_transform(df_test[col])","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"NOaVL_5WqD9z","executionInfo":{"status":"ok","timestamp":1735250333094,"user_tz":-120,"elapsed":11,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}},"outputId":"29364898-1c26-45a9-fd8f-1161d57a3e4a","trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.503607Z","iopub.execute_input":"2024-12-26T23:22:43.503965Z","iopub.status.idle":"2024-12-26T23:22:43.521494Z","shell.execute_reply.started":"2024-12-26T23:22:43.503933Z","shell.execute_reply":"2024-12-26T23:22:43.520339Z"}},"outputs":[],"execution_count":200},{"cell_type":"code","source":"from sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, BaggingClassifier, ExtraTreesClassifier, AdaBoostClassifier\nfrom xgboost import XGBClassifier\nfrom lightgbm import LGBMClassifier\n\n\nmodels = [\n    LogisticRegression(),\n    SVC(),\n    KNeighborsClassifier(),\n    DecisionTreeClassifier(),\n    RandomForestClassifier(),\n    BaggingClassifier(),\n    ExtraTreesClassifier(),\n    AdaBoostClassifier(),\n    XGBClassifier(),\n    LGBMClassifier()\n]\n\nmodels_names = [\n    \"LogisticRegression\",\n    \"SVC\",\n    \"KNeighborsClassifier\",\n    \"DecisionTreeClassifier\",\n    \"RandomForestClassifier\",\n    \"BaggingClassifier\",\n    \"ExtraTreesClassifier\",\n    \"AdaBoostClassifier\",\n    \"XGBClassifier\",\n    \"LGBMClassifier\"\n]","metadata":{"id":"i0k0mBbQtzGj","executionInfo":{"status":"ok","timestamp":1735250333094,"user_tz":-120,"elapsed":11,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}},"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.522942Z","iopub.execute_input":"2024-12-26T23:22:43.523291Z","iopub.status.idle":"2024-12-26T23:22:43.531108Z","shell.execute_reply.started":"2024-12-26T23:22:43.52326Z","shell.execute_reply":"2024-12-26T23:22:43.530086Z"}},"outputs":[],"execution_count":201},{"cell_type":"code","source":"model_scores = ML_models(models, models_names)\nmodel_scores","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":502},"id":"ywtmWwputPHT","executionInfo":{"status":"ok","timestamp":1735250339384,"user_tz":-120,"elapsed":6300,"user":{"displayName":"Ahmed Essam","userId":"04056900869702112005"}},"outputId":"acdec25b-a118-49a9-fc07-59b1d6ed9da1","trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:43.533766Z","iopub.execute_input":"2024-12-26T23:22:43.534171Z","iopub.status.idle":"2024-12-26T23:22:49.228307Z","shell.execute_reply.started":"2024-12-26T23:22:43.534122Z","shell.execute_reply":"2024-12-26T23:22:49.227092Z"}},"outputs":[{"name":"stdout","text":"[LightGBM] [Info] Number of positive: 3065, number of negative: 3031\n[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000834 seconds.\nYou can set `force_row_wise=true` to remove the overhead.\nAnd if memory is not enough, you can set `force_col_wise=true`.\n[LightGBM] [Info] Total Bins 1364\n[LightGBM] [Info] Number of data points in the train set: 6096, number of used features: 10\n[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.502789 -> initscore=0.011155\n[LightGBM] [Info] Start training from score 0.011155\n","output_type":"stream"},{"execution_count":202,"output_type":"execute_result","data":{"text/plain":"                    Model Train score Test score Ratio difference  \\\n0      LogisticRegression       78.3%     79.86%           -1.56%   \n1                     SVC      78.89%     81.89%           -3.00%   \n2    KNeighborsClassifier      82.09%     80.18%            1.90%   \n3  DecisionTreeClassifier      93.01%     74.48%           18.54%   \n4  RandomForestClassifier      93.01%     80.12%           12.89%   \n5       BaggingClassifier      91.75%     79.07%           12.68%   \n6    ExtraTreesClassifier      93.01%     78.94%           14.07%   \n7      AdaBoostClassifier      78.74%     80.45%           -1.71%   \n8           XGBClassifier      88.73%     81.04%            7.69%   \n9          LGBMClassifier      85.58%     81.63%            3.95%   \n\n  Evaluate model  \n0         middle  \n1        unknown  \n2           good  \n3       overfite  \n4       overfite  \n5       overfite  \n6       overfite  \n7        unknown  \n8           good  \n9           good  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Model</th>\n      <th>Train score</th>\n      <th>Test score</th>\n      <th>Ratio difference</th>\n      <th>Evaluate model</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>LogisticRegression</td>\n      <td>78.3%</td>\n      <td>79.86%</td>\n      <td>-1.56%</td>\n      <td>middle</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>SVC</td>\n      <td>78.89%</td>\n      <td>81.89%</td>\n      <td>-3.00%</td>\n      <td>unknown</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>KNeighborsClassifier</td>\n      <td>82.09%</td>\n      <td>80.18%</td>\n      <td>1.90%</td>\n      <td>good</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>DecisionTreeClassifier</td>\n      <td>93.01%</td>\n      <td>74.48%</td>\n      <td>18.54%</td>\n      <td>overfite</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>RandomForestClassifier</td>\n      <td>93.01%</td>\n      <td>80.12%</td>\n      <td>12.89%</td>\n      <td>overfite</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>BaggingClassifier</td>\n      <td>91.75%</td>\n      <td>79.07%</td>\n      <td>12.68%</td>\n      <td>overfite</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>ExtraTreesClassifier</td>\n      <td>93.01%</td>\n      <td>78.94%</td>\n      <td>14.07%</td>\n      <td>overfite</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>AdaBoostClassifier</td>\n      <td>78.74%</td>\n      <td>80.45%</td>\n      <td>-1.71%</td>\n      <td>unknown</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>XGBClassifier</td>\n      <td>88.73%</td>\n      <td>81.04%</td>\n      <td>7.69%</td>\n      <td>good</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>LGBMClassifier</td>\n      <td>85.58%</td>\n      <td>81.63%</td>\n      <td>3.95%</td>\n      <td>good</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":202},{"cell_type":"code","source":"y_pred = models[9].predict(df_test)\npred = y_pred == 1\nsubmission = pd.read_csv('/kaggle/input/spaceship-titanic/sample_submission.csv')\n\nsubmission['Transported'] = pred\n\nsubmission.to_csv('submission.csv', index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-26T23:22:49.229616Z","iopub.execute_input":"2024-12-26T23:22:49.229925Z","iopub.status.idle":"2024-12-26T23:22:49.278916Z","shell.execute_reply.started":"2024-12-26T23:22:49.229895Z","shell.execute_reply":"2024-12-26T23:22:49.278095Z"}},"outputs":[],"execution_count":203}]}